name: Building_docs

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  test_docker_compose:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and test
        id: docker_log
        run: |
          docker compose up -d cpu
          docker exec ginger poetry install
          docker exec ginger sh ./tests/tests.sh
          docker cp ginger:/gingerbread/coverage-badge.svg ./coverage-badge.svg
          docker cp ginger:/gingerbread/flake8-badge.svg ./flake8-badge.svg
          docker cp ginger:/gingerbread/tests-badge.svg ./tests-badge.svg
          rm ./flake8.txt
          rm ./junit.xml
      - uses: stefanzweifel/git-auto-commit-action@v4

  doc_building:
    needs: test_docker_compose
    if: github.event_name != 'push'
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        poetry-version: [1.3.2]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - run: poetry install
      - run: poetry run sphinx-apidoc -o docs .
      - run: cd docs && poetry run make html
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html
